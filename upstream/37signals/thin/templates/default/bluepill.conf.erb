require 'yaml'
config_path = "<%= @rails_root %>/config/thin/<%= @rails_env %>.yml"
config = YAML.load_file(config_path)
num_servers = config["servers"] ||= 1

Bluepill.application("<%= @name %>", :log_file => "<%= @rails_root %>/log/thin_bluepill.log") do |app|

  (0...num_servers).each do |i|

    # UNIX socket cluster use number 0 to 2 (for 3 servers)
    # and tcp cluster use port number 3000 to 3002.
    number = config['socket'] ? i : (config['port'] + i)

    app.process("<%= @name %>-#{number}") do |process|
      process.group = "thins"
      process.start_command = "<%= "#{@node[:ruby][:bin_dir]}/thin" %> start -C #{config_path} -o #{number}"
      <% if @node[:thin][:persistent_connections] %>
      # since we use persistent connections, we must forcefully kill these processes that would otherwise receive a QUIT for graceful killing
      process.stop_command = "kill -TERM {{PID}}"
      <% else %>
      process.stop_command = "<%= "#{@node[:ruby][:bin_dir]}/thin" %> stop -C #{config_path} -o #{number}"
      process.restart = "<%= "#{@node[:ruby][:bin_dir]}/thin" %> restart -C #{config_path} -o #{number}"
      <% end %>
      process.stdout = process.stderr = "<%= @rails_root %>/log/thin.log"
      process.pid_file = "<%= @rails_root %>/tmp/pids/thin.#{number}.pid"
      process.checks :mem_usage, :every => 10.seconds, :below => <%= @memory_limit %>.megabytes, :times => [3, 5]
      process.uid = "<%= @user %>"
      process.gid = "<%= @group %>"

      process.start_grace_time = 10.seconds
      process.restart_grace_time = 10.seconds

      process.checks :flapping, :times => 2, :within => 30.seconds, :retry_in => 7.seconds
    end
  end
end